{"version":3,"sources":["Components/Welcome.js","App.js","reportWebVitals.js","index.js"],"names":["Welcome","props","className","api","App","useState","query","setQuery","weather","setWeather","displayWeather","setDisplayWeather","symbol","setSymbol","greeting","setGreeting","main","temp","name","sys","country","Date","toDateString","message","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","cod","Math","round","calcWeather","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAaeA,MAVf,SAAiBC,GACb,OACG,qBAAKC,UAAWD,EAAMC,UAAtB,SACK,sBAAKA,UAAU,eAAf,UACA,oBAAIA,UAAU,WAAd,oBACA,oBAAIA,UAAU,iBAAd,iDACA,oBAAIA,UAAU,gBAAd,qDCNNC,EACC,mCADDA,EAEE,2CAmHOC,MAhHf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,OAG+BJ,mBAAS,IAHxC,mBAGNK,EAHM,KAGUC,EAHV,OAIeN,mBAAS,IAJxB,mBAINO,EAJM,KAIEC,EAJF,OAKmBR,mBAAS,IAL5B,mBAKNS,EALM,KAKIC,EALJ,KAqDb,OACE,qCACA,cAAC,EAAD,CAASb,UAAWY,IACpB,qBAAKZ,UAAmC,oBAAhBM,EAAQQ,MAAyBR,EAAQQ,KAAKC,KAAO,GAAM,WAAsB,MAAzG,SACE,iCACyB,oBAAhBT,EAAQQ,KACf,gCACE,sBAAKd,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UAA2BM,EAAQU,KAAnC,KAA2CV,EAAQW,IAAIC,WACvD,qBAAKlB,UAAU,OAAf,UAAuB,IAAImB,MAAOC,oBAEpC,sBAAKpB,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UACGQ,EADH,OACoBE,KAEpB,qBAAKV,UAAU,UAAf,SAA0BM,EAAQA,QAAQ,GAAGQ,aAG5CR,EAAQe,QAGb,qBAAKrB,UAAU,aAAf,SACE,uBACEsB,KAAK,OACLtB,UAAU,aACVuB,YAAY,oBACZC,SAAU,SAAAC,GAAC,OAAIpB,EAASoB,EAAEC,OAAOC,QACjCA,MAAOvB,EACPwB,WA7DK,SAAAC,GACG,UAAZA,EAAIC,MACO,KAAV1B,GAdP2B,MAAM,GAAD,OAAI9B,EAAJ,qBAAyBG,EAAzB,iCAAuDH,IAC3D+B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ5B,EAAW4B,GACO,QAAfA,EAAOC,MACRvB,EAAY,QACZJ,EAAmB4B,KAAKC,MAAMH,EAAOrB,KAAKC,OAC1CJ,EAAU,SASRE,EAAY,SAGZA,EAAY,UA0DZ,wBAAOb,UAAU,YAAjB,UACY,uBACIA,UAAU,YACVsB,KAAK,QACLN,KAAK,QACLW,MAAM,IACNH,SA3DD,SAAAK,GACN,KAAVzB,GAAgC,QAAhBE,EAAQ8B,KACzBzB,EAAU,KACVF,EAAmB4B,KAAKC,MAAMhC,EAAQQ,KAAKC,QAG3CF,EAAY,OA+CV,gBAUQ,wBAAOb,UAAU,YAAjB,UACI,uBACIA,UAAU,YACVsB,KAAK,QACLN,KAAK,QACLW,MAAM,IACNH,SA3DD,SAAAK,GACnB,GAAa,KAAVzB,GAAgC,QAAhBE,EAAQ8B,IAAc,CACvCzB,EAAU,KACV,IAAM4B,EAAcF,KAAKC,OAAOhC,EAAQQ,KAAKC,KAAK,IAAI,KACtDN,EAAkB8B,QAGlB1B,EAAY,OA8CF,sBC3FD2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAK1BZ,K","file":"static/js/main.11108711.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../Styles/styles.css';\r\n\r\nfunction Welcome(props) {\r\n    return (\r\n       <div className={props.className}>\r\n            <div className=\"greeting-box\">\r\n            <h1 className=\"greeting\">Howdy!</h1>\r\n            <h2 className=\"medium-heading\">Welcome to the ad free weather app!</h2>\r\n            <h4 className=\"small-heading\">May good weather always find you.</h4>\r\n        </div>\r\n       </div>\r\n    )}\r\nexport default Welcome;","import React, { useState } from 'react';\nimport Welcome from './Components/Welcome';\n\nconst api = {\n  key: \"89d162a00d18dbfdc8e4e806bd7453c5\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [displayWeather, setDisplayWeather] = useState('');\n  const [symbol, setSymbol] = useState('');\n  const [greeting, setGreeting] = useState('');\n\n function fetchForcast() {\n  fetch(`${api.base}weather?q=${query}&units=imperial&APPID=${api.key}`)\n  .then(res => res.json())\n  .then(result => {\n    setWeather(result);\n    if(result.cod !== '404'){\n      setGreeting('hide');\n      setDisplayWeather((Math.round(result.main.temp)));\n      setSymbol('F');\n    }\n  });\n }\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      if(query !== ''){\n        fetchForcast();\n        setGreeting('hide')\n      }\n      else {\n        setGreeting('');\n      }\n    }\n  }\n\n  const fTempHandler = evt => {\n    if(query !== '' && weather.cod !== '404'){\n      setSymbol('F');\n      setDisplayWeather((Math.round(weather.main.temp)));\n    }\n    else {\n      setGreeting('');\n    }\n  };\n\n  const cTempHandler = evt => {\n    if(query !== '' && weather.cod !== '404'){\n      setSymbol('C');\n      const calcWeather = Math.round((weather.main.temp-32)/1.8000);\n      setDisplayWeather(calcWeather);\n    }\n    else {\n      setGreeting('');\n    }\n  };\n\n  return (\n    <>\n    <Welcome className={greeting} />\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16) ? 'app warm' : 'app') : 'app'}>\n      <main>\n      {(typeof weather.main != \"undefined\") ? (\n        <div>\n          <div className=\"location-box\">\n            <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n            <div className=\"date\">{new Date().toDateString()}</div>\n          </div>\n          <div className=\"weather-box\">\n            <div className=\"temp\">\n              {displayWeather}Â°{symbol}\n            </div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n          </div>\n        </div>\n        ) : (weather.message)}\n\n        \n        <div className=\"search-box\">\n          <input \n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Enter city name..\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n        \n        <label className=\"radio-box\">\n                    <input\n                        className=\"radio-btn\"\n                        type=\"radio\"\n                        name=\"units\"\n                        value=\"F\"\n                        onChange={fTempHandler}\n                        />\n                    Fahrenheit\n                </label>\n                <label className=\"radio-box\">\n                    <input\n                        className=\"radio-btn\"\n                        type=\"radio\"\n                        name=\"units\"\n                        value=\"C\"\n                        onChange={cTempHandler}\n                        />\n                    Celcius\n                </label>\n      </main>\n      \n    </div>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport './Styles/styles.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}